source = ~/.config/hypr/mocha.conf

# env setup
env = HYPRLAND_LOG_WLR, 1
#env = GBM_BACKEND, nvidia-drm
env = EGL_PLATFORM, wayland
#env = WLR_NO_HARDWARE_CURSORS, 1
env = __GL_GSYNC_ALLOWED, 1
env = __GL_VRR_ALLOWED, 1
#env = LIBVA_DRIVER_NAME, iHD
#env = NVD_BACKEND, direct
#env = MOZ_DRM_DEVICE, /dev/dri/renderD129
env = MOZ_ENABLE_WAYLAND, 1
env = MOZ_DISABLE_RDD_SANDBOX, 1
env = THEME_DIR, /usr/share/themes/Catppuccin-Mocha-Standard-Lavender-Dark
env = GTK_THEME, Catppuccin-Mocha-Standard-Sapphire-Dark
env = XCURSOR_THEME, Catppuccin-Mocha-Sapphire-Cursors
env = XCURSOR_SIZE, 16
#env = QT_QPA_PLATFORM, wayland;xcb
env = QT_WAYLAND_DISABLE_WINDOWDECORATION, 1
env = QT_QPA_PLATFORMTHEME, qt5ct
#env = GDK_BACKEND, wayland, x11
#env = XDG_CURRENT_DESKTOP, Hyprland
env = XDG_SESSION_TYPE, wayland
#env = XDG_SESSION_DESKTOP, Hyprland
env = WLR_DRM_NO_ATOMIC, 1


exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dunst
exec-once = firefox
exec-once = signal
exec-once = teams-for-linux
exec-once = hyprpaper
exec-once = flameshot
exec-once = /usr/lib/kdeconnectd
exec-once = /home/lap/.cache/pypoetry/virtualenvs/normcap-ff0zFrDv-py3.11/bin/python /home/lap/.local/git/normcap/normcap/__main__.py
exec-once = /usr/lib/polkit-kde-authentication-agent-1

# clipboard
exec-once = wl-paste -t text --watch clipman store
exec-once = wl-paste -p -t text --watch clipman  store -P --histpath = "~/.local/share/clipman-primary.json"
exec-once = ~/.config/hypr/clipboard.sh

exec-once = /usr/lib/polkit-kde-authentication-agent-1

# idle timeout
# exec-once = swayidle -w timeout 600 "swaylock" before-sleep "swaylock"           # lock screen after 10 min of idle
exec-once = swayidle -w timeout 600 "systemctl suspend-then-hibernate"             # sleep after 10 mins of idle

# autostarts with hot reloads
## gBar
exec-once = ls ~/.config/gBar/style.scss | entr -pns "sass ~/.config/gBar/style.scss > ~/.config/gBar/style.css"
### while true restarts the process in case the file gets deleted
# exec-once = while true; do ls ~/.config/gBar/style.css ~/.config/gBar/config | entr -nrs "gBar bar 0"; sleep 1; done
exec-once = ls ~/.config/gBar/style.css ~/.config/gBar/config | entr -pnrs "systemctl --user restart gBar"

## dunst
exec-once = ls ~/.config/dunst/dunstrc | entr -nrs "dunst"

## pypr
exec-once = ls ~/.config/hypr/pyprland.toml | entr -nrs "rm /tmp/hypr/*/.pyprland.sock -f; pypr"

# monitor = , 3440x1440@144, auto, 1
monitor = , preferred, auto, 1
monitor = HDMI-A-1, 1920x1080@60, 1000x1600, 1
#monitor = HDMI-A-1, 3840x2160@60, 1000x1600, 1
 
input {
    kb_model = pc105awide
    kb_layout = us
    kb_variant = cmk_ed_us
    kb_options = misc:extend, lv5:caps_switch_lock, grp:shifts_toggle, compose:menu, misc:cmk_curl_dh 
    
    repeat_rate = 40
    repeat_delay = 200

    kb_file =
    kb_rules = evdev

    follow_mouse = 1

    touchpad {
        natural_scroll = yes
	disable_while_typing = no
    }

    sensitivity = 0.0 # -1.0 - 1.0, 0 means no modification.
}

general {
    gaps_in = 5
    gaps_out = 10
    border_size = 2
    col.active_border = rgba(8822bbff) rgba(2222bbff) 30deg
    col.inactive_border = rgba(333333ff)
    cursor_inactive_timeout = 1

    allow_tearing = true
    apply_sens_to_raw = 0 # whether to apply the sensitivity to raw input (e.g. used by games where you aim using your mouse)

    # damage_tracking = full # leave it on full unless you hate your GPU and want to make it suffer
}

xwayland {
  force_zero_scaling = true
}

decoration {
    rounding = 10
    blur {
        size = 3 # minimum 1
        passes = 2 # minimum 1
        new_optimizations = 1
	brightness = 0.7
	contrast = 1
	# vibrancy = 0.5
    }
}

animations {
    enabled = 1
    animation = windows, 1, 7, default
    animation = border, 1, 10, default
    animation = fade, 1, 10, default
    animation = workspaces, 1, 6, default
}

dwindle {
    pseudotile = 0 # enable pseudotiling on dwindle
}

gestures {
    workspace_swipe = true
    workspace_swipe_forever = true
    workspace_swipe_min_speed_to_force = 5
    workspace_swipe_distance = 200
    workspace_swipe_direction_lock = false
}

xwayland { 
    force_zero_scaling
}

# example window rules
# for windows named/classed as abc and xyz
#windowrule = move 69 420, abc
#windowrule = size 420 69, abc
#windowrule = tile, xyz
#windowrule = float, abc
#windowrule = pseudo, abc
windowrulev2 = workspace 1, class:^(firefox)$
windowrulev2 = workspace 2, class:^(jetbrains-client)$
windowrulev2 = workspace 3, class:^(.*Godot Engine)$
windowrulev2 = workspace 4, class:^(teams-for-linux)$
windowrulev2 = workspace 4, class:^(Spotify)$
windowrulev2 = workspace 5, class:^(Signal)$
windowrulev2 = workspace 8, class:^(openrgb)$
windowrulev2 = workspace 9, class:^(jetbrains-gateway)$
windowrulev2 = opaque, class:^(kitty)$
windowrulev2 = opacity 0.6 0.6, class:^(kitty)$
# xwayland fixes
# rider issues
windowrulev2 = nofocus, class:^(jetbrains-rider)$, title:^(win*.)$
windowrulev2 = bordercolor rgb(EE4B2B), class:^(jetbrains-rider)$, title:^(win*.)$
# unity issues
#windowrulev2 = opacity 0.8 0.8, class:^(Unity)$
windowrulev2 = opaque, class:^(Unity)$
windowrulev2 = move cursor -50% -50%, class:^(Unity)$, title:^(Color)$
windowrulev2 = move cursor -50% -50%, class:^(Unity)$, title:^(Select Texture)$
windowrulev2 = move cursor -50% -50%, class:^(Unity)$, title:^(UnityEditor.Searcher.SearcherWindow)$
windowrulev2 = move cursor -50% -50%, class:^(Unity)$, title:^(UnityEditor.AddComponent.AddComponentWindow)$
windowrulev2 = move cursor -50% -50%, class:^(Unity)$, title:^(Select Sprite)$
#windowrulev2 = immediate, class:^(rocketleague)$
#windowrulev2 = bordercolor rgb(EE4B2B), class:^(Unity)$ #, title:^(win*.)$

windowrulev2 = immediate, class:^(steam_app_1966720)$


# windowrulev2 = nofullscreenrequest, class:^(firefox-work)$
# windowrulev2 = nomaximizerequest, class:^(firefox-work)$

# gBar blur
layerrule = blur, ^(gtk-layer-shell)$
layerrule = ignorezero, ^(gtk-layer-shell)$

# dunst blur
layerrule = blur, ^(notifications)$
layerrule = ignorezero, ^(notifications)$

# rofi blur
layerrule = blur, ^(rofi)$
layerrule = ignorezero, ^(rofi)$

#windowrule = tile, jetbrains-client
windowrule = tile, jetbrains-gateway
windowrulev2 = tile, title:^(.*Godot Engine)$

# some nice mouse binds
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

bind = SUPER, Q, exec, kitty
bind = SUPER, C, killactive,
bind = SUPER, M, exit,
bind = SUPER, E, exec, dolphin
bind = ALT, F, togglefloating,
bind = SUPER, F, fullscreen, 0
bind = SUPERSHIFT, F, fullscreen, 1
bind = SUPER, R, exec, rofi -show drun -theme $HOME/.config/rofi/launchers/type-3/style-1.rasi
bind = SUPER, P, exec, grim -g "$(slurp)" - | wl-copy
bind = , PRINT, exec, hyprland-interactive-screenshot
#bind = SUPER, P, pseudo,

# extend specific
bind = MOD3SUPER, n, movefocus, l
bind = MOD3SUPER, i, movefocus, r
bind = MOD3SUPER, u, movefocus, u
bind = MOD3SUPER, e, movefocus, d

bind = MOD3SUPERCTRL, l, workspace, 1
#bind = MOD3SUPERSHIFT, l, workspace, 1
bind = MOD3SUPERCTRL, y, workspace, e+1
bind = MOD3SUPERCTRL, i, workspace, +1
bind = MOD3SUPERCTRL, n, workspace, -1

bind = MOD3SUPERCTRLSHIFT, l, movetoworkspace, 1
bind = MOD3SUPERCTRLSHIFt, y, movetoworkspace, e+1
bind = MOD3SUPERCTRLSHIFT, i, movetoworkspace, +1
bind = MOD3SUPERCTRLSHIFT, n, movetoworkspace, -1

# normal binds
bind = SUPER, left, movefocus, l
bind = SUPER, right, movefocus, r
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d

bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10


bind = ALT, 1, movetoworkspace, 1
bind = ALT, 2, movetoworkspace, 2
bind = ALT, 3, movetoworkspace, 3
bind = ALT, 4, movetoworkspace, 4
bind = ALT, 5, movetoworkspace, 5
bind = ALT, 6, movetoworkspace, 6
bind = ALT, 7, movetoworkspace, 7
bind = ALT, 8, movetoworkspace, 8
bind = ALT, 9, movetoworkspace, 9
bind = ALT, 0, movetoworkspace, 10

bind = SUPER, mouse_down, workspace, e+1
bind = SUPER, mouse_up, workspace, e-1

bindl = , XF86AudioPlay, exec, playerctl -p spotify play-pause
bindl = , XF86AudioPause, exec, playerctl -p spotify pause
bindl = , XF86AudioStop, exec, playerctl -p spotify stop
bindl = , XF86AudioNext, exec, playerctl -p spotify next
bindl = , XF86AudioPrev, exec, playerctl -p spotify previous

bindl = SHIFT, XF86AudioPlay, exec, playerctl play-pause
bindl = SHIFT, XF86AudioPause, exec, playerctl pause
bindl = SHIFT, XF86AudioStop, exec, playerctl stop
bindl = SHIFT, XF86AudioNext, exec, playerctl next
bindl = SHIFT, XF86AudioPrev, exec, playerctl previous

bindl = , XF86MonBrightnessDown, exec, brightnessctl set 5%-
bindl = , XF86MonBrightnessUp, exec, brightnessctl set +5%


# pyprland things
#bind = SUPER, N, exec, pypr toggle_minimized
bind = SUPER SHIFT, Z, exec, pypr zoom
bind = SUPER ALT, P, exec, pypr toggle_dpms
bind = SUPER SHIFT, O, exec, pypr shift_monitors +1
#bind = SUPER, B, exec, pypr expose
bind = MOD3SUPER, L, exec, pypr toggle termleft
bind = MOD3SUPER, Y, exec, pypr toggle termright
bind = MOD3SUPER, O, exec, pypr toggle workinfo
bind = SUPER SHIFT, M, exec, pypr toggle stb stb-logs
bind = SUPER, A, exec, pypr toggle term
bind = SUPER, V, exec, pypr toggle volume

# pie
windowrule = noblur, kando
windowrule = noborder, kando
windowrule = noanim, kando
windowrule = center, kando
windowrule = size 100% 100%, kando
#bind = CTRL, Space, global, kando:prototype_trigger
